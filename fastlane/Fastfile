fastlane_version '2.53.1'

lane :github do
  set_github_release(
    repository_name: "cds-snc/covid-shield-mobile",
    api_token: ENV["GITHUB_TOKEN"],
    name: prompt(
      text: "Release name (ex: Android v19): "
    ),
    tag_name: prompt(
      text: "Tag (ex: android-v19): "
    ),
    description: changelog_from_git_commits(
      merge_commit_filtering: "only_include_merges"
    ),
    commitish: "master",
  )
end

platform :ios do
  lane :beta do
    ensure_git_branch
    ensure_git_status_clean

    increment_build_number(
      build_number: latest_testflight_build_number + 1,
      xcodeproj: "ios/CovidShield.xcodeproj"
    )

    get_certificates(
      output_path: "fastlane/certs"
    )
    get_provisioning_profile(
      output_path: "fastlane/certs"
    )

    build_app(
      scheme: "CovidShield",
      workspace: "./ios/CovidShield.xcworkspace",
      export_method: "app-store",
      export_options: {
        provisioningProfiles: {
          ENV["APP_ID_IOS"] => ENV["PROFILE"]
        }
      }
    )

    groups = ENV["TEST_GROUPS"].split(",")
    upload_to_testflight(
      groups: groups
    )

    github
  end

  lane :local do
    get_certificates(
      output_path: "fastlane/certs"
    )
    get_provisioning_profile(
      adhoc: true,
      provisioning_name: ENV["PROFILE_ADHOC"],
      output_path: "fastlane/certs"
    )

    build_app(
      scheme: "CovidShield",
      workspace: "./ios/CovidShield.xcworkspace",
      export_method: "ad-hoc",
      output_directory: "./build",
      export_options: {
        provisioningProfiles: {
          ENV["APP_ID_IOS"] => ENV["PROFILE_ADHOC"]
        }
      }
    )
  end
end

platform :android do
  private_lane :build do |options|
    task = (options[:bundle] ? "bundle" : "assemble")
    gradle(
      task: task,
      build_type: 'Release',
      project_dir: 'android/'
    )
  end

  lane :internal do
    ensure_git_branch
    ensure_git_status_clean
    build(bundle: true)

    upload_to_play_store(
      track: 'internal',
      release_status: 'draft',
      skip_upload_apk: true,
      aab: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH]
    )

    github
  end

  lane :local do
    build
  end
end
